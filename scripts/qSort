#!/usr/bin/perl -w
use strict;

##This program is used to sort the file using Quick Sorting algorithm,different arguments are allowed

my (@arg) = @ARGV;
error() if (@ARGV<1);

my $index = 0;

my $sep="\t";our @column=(0);my $column="";my $header=0;
for(my $i=0;$i<@arg;$i++){    #get arguments and return some error message if arguments not right
    if($arg[$i] eq "-h"){
	USAGE();
    }
    elsif($arg[$i] eq "-in"){
	if($i == @arg-1){error();}
	else{
	    open(FILE,$arg[$i+1])||error();
	    $index++;
	}
    }
    elsif($arg[$i] eq "-out"){
	if($i == @arg-1){error();}
	else{
	    open(OUT,">$arg[$i+1]")||error();
	    $index++;
	}
    }
    elsif($arg[$i] eq "-col"){
	if($i == @arg-1){error();}
	elsif($arg[$i+1] =~ /\d+/ && $arg[$i+1] !~ /[^\d,]/){
	    $column = $arg[$i+1];
	}
    }
    elsif($arg[$i] eq "-header"){$header = 1;}
    elsif($arg[$i] eq "-sep"){
	if($i == @arg-1){error();}
	else{$sep = $arg[$i+1];}
    }
}

if($column ne ""){
    @column = split(/,/,$column);
}

our @row=(<FILE>);
our @col=();
foreach my $line(@row){
    chomp($line);
    my @arr = split(/\t/,$line);
    push (@col,\@arr);
}

q_sort($header,@row-1);

foreach my $row(@row){
    print OUT "$row\n";
}

sub q_sort{
    my ($left,$right) = @_;
    my $i;my $j;
    if ($left >= $right){
	return;
    }
    else{
	swap($left, ($left + $right)/2);
	$j = $left;
	for ( $i = $left + 1; $i <= $right; $i++){
	    if(judge($i,$left) < 0){
		$j++;
		swap($j,$i);
	    }
	}
	swap($left,$j);
	q_sort($left,$j-1);
	q_sort($j+1,$right);
    }
}

sub swap{
    my ($m,$n) = @_;
    my $new=$row[$m];
    $row[$m] = $row[$n];
    $row[$n] = $new;

    for(my $i=0;$i<@{$col[$m]};$i++){
	my $p = $col[$m][$i];
	$col[$m][$i] = $col[$n][$i];
	$col[$n][$i] = $p;
    }
}

sub judge{
    my($m,$n)=@_;
    for(my $i=0;$i<@column;$i++){
	if($col[$m][$column[$i]-1] =~ /[^\d\.]/){
	    if($col[$m][$column[$i]-1] lt $col[$n][$column[$i]-1]){
		return -1;
	    }
	    elsif($col[$m][$column[$i]-1] gt $col[$n][$column[$i]-1]){
		return 1;
	    }
	}
	else{
	    if($col[$m][$column[$i]-1] < $col[$n][$column[$i]-1]){
                return -1;
            }
            elsif($col[$m][$column[$i]-1] > $col[$n][$column[$i]-1]){
                return 1;
            }
	}
    }
    return 0;
}

sub error{
    die "USAGE:q_sort -in input_file -out output_file [-col m,n,...] [-header] [-sep separator]
         If not familiar to the arguments,-h is avialble,you will know the USAGE of the arguments\n";
}

sub USAGE{
    die "USAGE:q_sort -in input_file -out output_file [-col m,n,...] [-header] [-sep separator]
                -in       The file to be sorted
                -out      OutPut File name
                [-col]    The columns used to sort your data,default 1,eg: -col 1,2,3
                [-header] Whether to sort the first line,default NO
                [-sep]    The character used to separate your data to columns,default '\\t'\n";
}

close FILE;
close OUT;
exit;

 
